@page "/profile"
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider
@using Microsoft.AspNetCore.Components.Authorization
@using ESIID42025.Models
@inject IProductService ProductService
@rendermode InteractiveServer

<h1 class="visually-hidden">Profile</h1>

<!-- Wrapper igual ao da Home -->
<div class="container-fluid px-4 mt-4">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3 col-lg-2 bg-light border-end px-4 py-4">
            <div class="text-center mb-4">
                <i class="bi bi-person-circle" style="font-size: 4.5rem; color: #2962FF;"></i>
                <h5 class="mt-3 fw-bold" style="color: #2962FF; font-size: 1.3rem;">Hello, @userName!</h5>
            </div>

            <ul class="list-unstyled">
                <li class="d-flex justify-content-between align-items-center py-3 border-bottom" style="cursor: pointer;" @onclick="@(() => NavigateTo("/account"))">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-person-fill me-3" style="font-size: 1.5rem; color: black;"></i>
                        <span class="fw-semibold text-dark" style="font-size: 1.2rem;">Account</span>
                    </div>
                    <i class="bi bi-chevron-right text-muted" style="font-size: 1.2rem;"></i>
                </li>

                <li class="d-flex justify-content-between align-items-center py-3 border-bottom" style="cursor: pointer;" @onclick="@(() => NavigateTo("/profile"))">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-check-circle me-3" style="font-size: 1.5rem; color: black;"></i>
                        <span class="fw-semibold text-dark" style="font-size: 1.2rem;">Confirmations</span>
                    </div>
                    <i class="bi bi-chevron-right text-muted" style="font-size: 1.2rem;"></i>
                </li>

                <li class="d-flex justify-content-between align-items-center py-3 border-bottom" style="cursor: pointer;" @onclick="@(() => NavigateTo("/account/messages"))">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-chat-left-text me-3" style="font-size: 1.5rem; color: black;"></i>
                        <span class="fw-semibold text-dark" style="font-size: 1.2rem;">Messages</span>
                    </div>
                    <i class="bi bi-chevron-right text-muted" style="font-size: 1.2rem;"></i>
                </li>

                <li class="d-flex justify-content-between align-items-center py-3 mt-4" style="cursor: pointer;" @onclick="Logout">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-box-arrow-right me-3" style="font-size: 1.5rem; color: #2962FF;"></i>
                        <span class="fw-semibold" style="font-size: 1.2rem; color: #2962FF;">Logout</span>
                    </div>
                </li>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="col-md-9 col-lg-10 px-4 py-4">
            <h3 class="fw-bold mb-4">Your Confirmations</h3>

            @if (confirmations == null)
            {
                <p>Loading...</p>
            }
            else if (!confirmations.Any())
            {
                <p class="text-muted">You have no price confirmations yet.</p>
            }
            else
            {
                <div class="list-group">
                    @foreach (var confirmation in confirmations)
                    {
                        <div class="list-group-item list-group-item-action">
                            Product ID: <strong>@confirmation.PriceID</strong><br />
                            Date: @confirmation.Confirmation_DateTime.ToString("dd/MM/yyyy HH:mm")
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<PriceConfirmation> confirmations = new();
    private string userName = "User";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userName = user.Identity?.Name ?? "User";
            var userId = user.FindFirst("sub")?.Value
                         ?? user.FindFirst("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;

            if (!string.IsNullOrEmpty(userId))
            {
                confirmations = await ProductService.GetConfirmationsForUserAsync(userId);
            }
        }
    }

    private void NavigateTo(string url)
    {
        Navigation.NavigateTo(url);
    }

    private void Logout()
    {
        Navigation.NavigateTo("/Account/Logout", forceLoad: true);
    }
}
