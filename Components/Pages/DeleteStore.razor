@page "/stores/delete/{id:int}"
@inject StoreService StoreService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Delete Store</h3>

@if (store == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">Are you sure you want to delete this store?</h4>
        <hr />
        <p><strong>Name:</strong> @store.Name</p>
        <p><strong>Location:</strong> @store.Location</p>
        <p><strong>Registration Date:</strong> @store.Registration_Date.ToShortDateString()</p>

        <button class="btn btn-danger me-2" @onclick="ConfirmDelete">Delete</button>
        <button class="btn btn-secondary" @onclick="GoBack">Cancel</button>
    </div>
}

@code {
    [Parameter]
    public int id { get; set; }

    private Store? store;

    protected override async Task OnInitializedAsync()
    {
        store = await StoreService.GetStoreByIdAsync(id);
        if (store == null)
        {
            NavigationManager.NavigateTo("/stores");
        }
    }

    private async Task ConfirmDelete()
    {
        await StoreService.DeleteStoreAsync(id);
        NavigationManager.NavigateTo("/stores");
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/stores");
    }
}