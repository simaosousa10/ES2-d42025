@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using BlazorAuthorizationDotNet8.Components.Account
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using ESIID42025.Data

@inject UserManager<User> UserManager
@inject IEmailSender<User> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot Password</PageTitle>

<style>
    body {
        background-color: #f8f9fa;
        margin: 0;
    }

    .auth-logo {
        position: absolute;
        top: -35px;
        left: 20px;
        width: 160px;
    }

    .forgot-wrapper {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        min-height: 100vh;
        padding-top: 40px;
    }

    .forgot-card {
        background-color: white;
        padding: 50px;
        border-radius: 16px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        width: 460px;
    }

    .forgot-card h2 {
        text-align: center;
        color: #3064fc;
        margin-bottom: 30px;
        font-size: 26px;
    }

    .form-label {
        font-weight: 500;
    }

    .form-control {
        margin-bottom: 15px;
    }

    .btn-reset {
        width: 100%;
        background-color: #3064fc;
        color: white;
        font-weight: 600;
        border: none;
        padding: 12px;
        border-radius: 6px;
        margin-top: 10px;
        font-size: 16px;
    }

    .btn-reset:hover {
        background-color: #2553cc;
    }
</style>

<a href="/">
    <img src="/images/LogoEmAzul.png" class="auth-logo" alt="DealRadar Logo" />
</a>

<div class="forgot-wrapper">
    <div class="forgot-card">
        <h2>Forgot your password?</h2>

        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <label for="email" class="form-label">Email</label>
            <InputText @bind-Value="Input.Email" class="form-control" id="email" placeholder="Enter your email" />
            <ValidationMessage For="() => Input.Email" class="text-danger" />

            <button type="submit" class="btn-reset">Reset password</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
